version: '2'
services:
  php:
    build: 
      context: .
      dockerfile: Dockerfile
      target: api_platform_php
    depends_on:
      - database  
    networks:
      - default   
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s   
    volumes:
      - php_socket:/var/run/php

  pwa:
    build:
      context: ./pwa
      dockerfile: Dockerfile
      target: api_platform_pwa_prod
    environment:
      API_PLATFORM_CLIENT_GENERATOR_ENTRYPOINT: http://caddy
      NEXT_PUBLIC_ENTRYPOINT: http://caddy

  caddy:
    build:
      context: .
      dockerfile: Dockerfile
      target: api_platform_caddy
    depends_on:
      - php
      - pwa    
    environment:
      PWA_UPSTREAM: pwa:3000
      SERVER_NAME: ${SERVER_NAME:-localhost, caddy:80}
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_PUBLISHER_JWT_KEY:-!ChangeMe!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_SUBSCRIBER_JWT_KEY:-!ChangeMe!}      
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: 80
        protocol: tcp
      # HTTPS
      - target: 443
        published: 443
        protocol: tcp     
      # HTTP/3
      - target: 443
        published: 443
        protocol: udp

  databasepost:
    image: postgres:13-alpine     
    environment:
      - POSTGRES_DB=api
      - POSTGRES_PASSWORD=anca
      - POSTGRES_USER=anca

    
    
  database:
    image: postgres:13-alpine
    environment:
       POSTGRES_DB: api
       POSTGRES_PASSWORD: test
       POSTGRES_USER: test


volumes:
  php_socket:
  caddy_data:
  caddy_config:


